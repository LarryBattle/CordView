plugins {
    id 'org.springframework.boot' version '2.3.0.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'org.asciidoctor.convert' version '1.5.8'
    id 'java'
    id "io.freefair.lombok" version "5.1.0"
}

group = 'dev.larrybattle'
version = '0.1.0-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
    set('springBootAdminVersion', "2.2.3")
    set('springCloudVersion', "Hoxton.SR5")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'

//    implementation 'ma.glasnost.orika:orika-core::1.5.4'

    // https://mvnrepository.com/artifact/ma.glasnost.orika/orika-core
    compile group: 'ma.glasnost.orika', name: 'orika-core', version: '1.5.4'


    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
//	testImplementation 'org.springframework.amqp:spring-rabbit-test'
// TODO Look into these packages
//	implementation 'org.springframework.boot:spring-boot-starter-mail'
//	implementation 'org.springframework.boot:spring-boot-starter-amqp'
//	implementation 'org.springframework.cloud:spring-cloud-starter-aws'
//	implementation 'org.springframework.boot:spring-boot-starter-quartz'
//	implementation 'de.codecentric:spring-boot-admin-starter-client'
//	implementation 'de.codecentric:spring-boot-admin-starter-server'
//	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
}

dependencyManagement {
    imports {
//		mavenBom "de.codecentric:spring-boot-admin-dependencies:${springBootAdminVersion}"
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

asciidoctor {
    inputs.dir snippetsDir
    dependsOn test
}

bootRun {
    if (project.hasProperty('args')) {
        args project.args.split(",")
    }
}